version: 2
jobs:
  build:
    docker:
<<<<<<< HEAD
      - image: circleci/node:8.11.2
    parallelism: 1
    working_directory: ~/react-application
  steps:
    - checkout
    - attach_workspace:
        at: ~/react-application
    - run: yarn install
    - run: yarn build
    - persist_to_workspace:
        root: .
        paths: dist
  deploy:
    docker:
      - image: circleci/golang:1.9.6
    parallelism: 1
    working_directory: ~/react-application
    steps:
    - checkout
    - attach_workspace:
        at: ~/react-application
    - restore_cache:
        key: v1-pkg-cache
    - run: go get -v github.com/bep/s3deploy
    - save_cache:
        key: v1-pkg-cache
        paths:
           - /go/pkg
    - run:
      name: Deploy to S3
      command: |
        s3deploy -source=dist/ -region=us-east-1 -key=$PROD_AWS_ACCESS_KEY_ID -secret=$PROD_AWS_SECRET_ACCESS_KEY -distribution-id=$AWS_CLOUDFRONT_DISTRIBUTION_ID -bucket=$BUCKET_NAME
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build:
        filters:
          branches:
            only:
              - master
      - deploy:
        requires:
          - build
            filters:
              branches:
                only:
                  - master
=======
      - image: circleci/node
    steps:
      - checkout
      - restore_cache: # special step to restore the dependency cache
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Setup Dependencies
          command: npm install
      - run:
          name: Setup Code Climate test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - save_cache: # special step to save the dependency cache
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run: # run tests
          name: Run Test and Coverage
          command: |
            ./cc-test-reporter before-build
            npm test -- --coverage
            ./cc-test-reporter after-build --exit-code $?
>>>>>>> cdfeb606b217abf927310d485890340f2a6d5fe3
